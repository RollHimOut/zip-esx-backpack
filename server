local ox_inventory = exports.ox_inventory

RegisterServerEvent('backpack:equip', function()
    local xPlayer = ESX.GetPlayerFromId(source)

    -- Check if player already has a backpack equipped
    local equippedBackpack = xPlayer.getInventoryItem(Config.BackpackItem)
    if not equippedBackpack or equippedBackpack.count < 1 then
        TriggerClientEvent('esx:showNotification', source, "You don't have a backpack to equip.")
        return
    end

    -- Generate a unique backpack ID
    local backpackId = 'backpack_' .. xPlayer.identifier .. '_' .. math.random(10000, 99999)

    -- Assign stash for the backpack
    ox_inventory:RegisterStash(backpackId, "Backpack", Config.MaxSlots, Config.MaxWeight)

    -- Equip the backpack
    TriggerClientEvent('backpack:equipBackpack', source, backpackId)
end)

RegisterServerEvent('backpack:removeExtra', function()
    local xPlayer = ESX.GetPlayerFromId(source)
    local extraBackpacks = xPlayer.getInventoryItem(Config.BackpackItem).count - 1

    if extraBackpacks > 0 then
        xPlayer.removeInventoryItem(Config.BackpackItem, extraBackpacks)
        TriggerClientEvent('esx:showNotification', source, "Extra backpacks have been removed.")
    end
end)

AddEventHandler('ox_inventory:saveInventory', function(stashName, items)
    if string.sub(stashName, 1, 8) == "backpack" then
        -- Save items to the database
        local backpackId = stashName
        MySQL.Async.execute('DELETE FROM backpack_inventory WHERE backpack_id = ?', {backpackId})

        for _, item in pairs(items) do
            MySQL.Async.execute('INSERT INTO backpack_inventory (backpack_id, item_name, item_count, metadata) VALUES (?, ?, ?, ?)', {
                backpackId,
                item.name,
                item.count,
                json.encode(item.metadata or {})
            })
        end
    end
end)

AddEventHandler('ox_inventory:loadInventory', function(stashName, cb)
    if string.sub(stashName, 1, 8) == "backpack" then
        -- Load items from the database
        local items = {}
        local backpackId = stashName

        MySQL.Async.fetchAll('SELECT * FROM backpack_inventory WHERE backpack_id = ?', {backpackId}, function(result)
            for _, row in ipairs(result) do
                table.insert(items, {
                    name = row.item_name,
                    count = row.item_count,
                    metadata = json.decode(row.metadata or '{}')
                })
            end
            cb(items)
        end)
    else
        cb({})
    end
end)
